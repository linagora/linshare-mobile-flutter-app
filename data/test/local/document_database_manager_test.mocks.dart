// Mocks generated by Mockito 5.0.17 from annotations
// in data/test/local/document_database_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:data/src/local/database_client.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDatabase_0 extends _i1.Fake implements _i2.Database {}

class _FakeBatch_1 extends _i1.Fake implements _i2.Batch {}

/// A class which mocks [DatabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseClient extends _i1.Mock implements _i3.DatabaseClient {
  MockDatabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i2.Database>.value(_FakeDatabase_0()))
          as _i4.Future<_i2.Database>);
  @override
  _i4.Future<_i2.Batch> get batch =>
      (super.noSuchMethod(Invocation.getter(#batch),
              returnValue: Future<_i2.Batch>.value(_FakeBatch_1()))
          as _i4.Future<_i2.Batch>);
  @override
  _i4.Future<dynamic> closeDatabase() =>
      (super.noSuchMethod(Invocation.method(#closeDatabase, []),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<int> insertData(
          String? tableName, Map<String, dynamic>? mapObject) =>
      (super.noSuchMethod(
          Invocation.method(#insertData, [tableName, mapObject]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> deleteData(String? tableName, String? key, String? value) =>
      (super.noSuchMethod(
          Invocation.method(#deleteData, [tableName, key, value]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<int> updateData(String? tableName, String? key, String? value,
          Map<String, dynamic>? mapObject) =>
      (super.noSuchMethod(
          Invocation.method(#updateData, [tableName, key, value, mapObject]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getData(
          String? tableName, String? key, String? value) =>
      (super.noSuchMethod(Invocation.method(#getData, [tableName, key, value]),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getListData(String? tableName) =>
      (super.noSuchMethod(Invocation.method(#getListData, [tableName]),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<dynamic> deleteLocalFile(String? localPath) =>
      (super.noSuchMethod(Invocation.method(#deleteLocalFile, [localPath]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<List<Map<String, dynamic>>> getListDataWithCondition(
          String? tableName, String? condition, List<dynamic>? values) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getListDataWithCondition, [tableName, condition, values]),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i4.Future<List<Map<String, dynamic>>>);
  @override
  _i4.Future<dynamic> insertMultipleData(
          String? tableName, List<Map<String, dynamic>?>? mapObjects) =>
      (super.noSuchMethod(
          Invocation.method(#insertMultipleData, [tableName, mapObjects]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  _i4.Future<int> clearAllData(String? tableName) =>
      (super.noSuchMethod(Invocation.method(#clearAllData, [tableName]),
          returnValue: Future<int>.value(0)) as _i4.Future<int>);
  @override
  _i4.Future<dynamic> deleteListFile(List<String>? listLocalPath) =>
      (super.noSuchMethod(Invocation.method(#deleteListFile, [listLocalPath]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
