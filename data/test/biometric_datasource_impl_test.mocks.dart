// Mocks generated by Mockito 5.0.17 from annotations
// in data/test/biometric_datasource_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:data/src/util/biometric_service.dart' as _i2;
import 'package:data/src/util/local_biometric_service.dart' as _i5;
import 'package:domain/domain.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [BiometricService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBiometricService extends _i1.Mock implements _i2.BiometricService {
  MockBiometricService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isAvailable() =>
      (super.noSuchMethod(Invocation.method(#isAvailable, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> authenticate(String? localizedReason,
          {_i4.AndroidSettingArgument? androidSettingArgument,
          _i4.IOSSettingArgument? iosSettingArgument}) =>
      (super.noSuchMethod(
          Invocation.method(#authenticate, [
            localizedReason
          ], {
            #androidSettingArgument: androidSettingArgument,
            #iosSettingArgument: iosSettingArgument
          }),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.BiometricKind>> getAvailableBiometrics() =>
      (super.noSuchMethod(Invocation.method(#getAvailableBiometrics, []),
              returnValue:
                  Future<List<_i4.BiometricKind>>.value(<_i4.BiometricKind>[]))
          as _i3.Future<List<_i4.BiometricKind>>);
}

/// A class which mocks [LocalBiometricService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalBiometricService extends _i1.Mock
    implements _i5.LocalBiometricService {
  MockLocalBiometricService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isAvailable() =>
      (super.noSuchMethod(Invocation.method(#isAvailable, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> authenticate(String? localizedReason,
          {_i4.AndroidSettingArgument? androidSettingArgument,
          _i4.IOSSettingArgument? iosSettingArgument}) =>
      (super.noSuchMethod(
          Invocation.method(#authenticate, [
            localizedReason
          ], {
            #androidSettingArgument: androidSettingArgument,
            #iosSettingArgument: iosSettingArgument
          }),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.BiometricKind>> getAvailableBiometrics() =>
      (super.noSuchMethod(Invocation.method(#getAvailableBiometrics, []),
              returnValue:
                  Future<List<_i4.BiometricKind>>.value(<_i4.BiometricKind>[]))
          as _i3.Future<List<_i4.BiometricKind>>);
}
