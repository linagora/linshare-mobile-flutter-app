// Mocks generated by Mockito 5.0.17 from annotations
// in domain/test/usecases/audit_user/get_last_login_interactor_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:domain/domain.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLastLogin_0 extends _i1.Fake implements _i2.LastLogin {}

/// A class which mocks [AuditUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuditUserRepository extends _i1.Mock
    implements _i2.AuditUserRepository {
  MockAuditUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.LastLogin> getLastLogin() =>
      (super.noSuchMethod(Invocation.method(#getLastLogin, []),
              returnValue: Future<_i2.LastLogin>.value(_FakeLastLogin_0()))
          as _i3.Future<_i2.LastLogin>);
  @override
  _i3.Future<dynamic> saveLastLogin(_i2.LastLogin? lastLogin) =>
      (super.noSuchMethod(Invocation.method(#saveLastLogin, [lastLogin]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<_i2.LastLogin> getLastLoginOffline() =>
      (super.noSuchMethod(Invocation.method(#getLastLoginOffline, []),
              returnValue: Future<_i2.LastLogin>.value(_FakeLastLogin_0()))
          as _i3.Future<_i2.LastLogin>);
}
